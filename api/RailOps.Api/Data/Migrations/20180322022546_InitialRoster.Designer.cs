// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Metadata.Internal;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using RailOps.Api.Data;

namespace RailOps.Api.Data.Migrations
{
    [DbContext(typeof(RailOpsContext))]
    [Migration("20180322022546_InitialRoster")]
    partial class InitialRoster
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.0-preview1-28290");

            modelBuilder.Entity("RailOps.Api.Entities.Roster.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CarTypeId");

                    b.Property<string>("Color");

                    b.Property<string>("Comments");

                    b.Property<bool>("IsCaboose");

                    b.Property<bool>("IsFRED");

                    b.Property<bool>("IsHazardous");

                    b.Property<bool>("IsPassenger");

                    b.Property<bool>("IsUtility");

                    b.Property<int>("Length");

                    b.Property<int>("LoadTypeId");

                    b.Property<int>("RoadId");

                    b.Property<string>("RoadNumber");

                    b.Property<decimal>("WeightOunces");

                    b.Property<int>("WeightTons");

                    b.HasKey("Id");

                    b.HasIndex("CarTypeId");

                    b.HasIndex("LoadTypeId");

                    b.HasIndex("RoadId");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("RailOps.Api.Entities.Roster.CarType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("CarTypes");
                });

            modelBuilder.Entity("RailOps.Api.Entities.Roster.Engine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comments");

                    b.Property<int>("Length");

                    b.Property<int>("ModelId");

                    b.Property<int>("RoadId");

                    b.Property<string>("RoadNumber");

                    b.Property<int>("TypeId");

                    b.Property<int>("WeightTons");

                    b.HasKey("Id");

                    b.HasIndex("ModelId");

                    b.HasIndex("RoadId");

                    b.HasIndex("TypeId");

                    b.ToTable("Engines");
                });

            modelBuilder.Entity("RailOps.Api.Entities.Roster.EngineModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("EngineModels");
                });

            modelBuilder.Entity("RailOps.Api.Entities.Roster.EngineType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("EngineTypes");
                });

            modelBuilder.Entity("RailOps.Api.Entities.Roster.LoadType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("LoadTypes");
                });

            modelBuilder.Entity("RailOps.Api.Entities.Roster.Road", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Roads");
                });

            modelBuilder.Entity("RailOps.Api.Entities.Roster.Car", b =>
                {
                    b.HasOne("RailOps.Api.Entities.Roster.CarType", "Type")
                        .WithMany()
                        .HasForeignKey("CarTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("RailOps.Api.Entities.Roster.LoadType", "Load")
                        .WithMany()
                        .HasForeignKey("LoadTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("RailOps.Api.Entities.Roster.Road", "Road")
                        .WithMany()
                        .HasForeignKey("RoadId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RailOps.Api.Entities.Roster.Engine", b =>
                {
                    b.HasOne("RailOps.Api.Entities.Roster.EngineModel", "Model")
                        .WithMany()
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("RailOps.Api.Entities.Roster.Road", "Road")
                        .WithMany()
                        .HasForeignKey("RoadId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("RailOps.Api.Entities.Roster.EngineType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
